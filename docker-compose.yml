version: "3.8"

services:
  # front-end application
  web:
    container_name: fishnv-app
    build:
      context: fishnv-app
      dockerfile: dev.Dockerfile
    command: sh -c "npm install --force && npm run dev -- --host 0.0.0.0"
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      VITE_APIURL: ${VITE_APIURL}
      VITE_TILE_URL: ${VITE_TILE_URL}
      VITE_MAPTILER_KEY: ${VITE_MAPTILER_KEY}
    working_dir: /usr/src/app
    volumes:
      - ./fishnv-app:/usr/src/app
  
  # rest API
  api:
    container_name: fishnv-api
    depends_on:
      db:
        condition: service_healthy
    build:
      context: fishnv-api
      dockerfile: Dockerfile.Dev
    command: sh -c "npm install --force && npm run dev"
    restart: on-failure
    ports:
      - 3001:3000
    environment:
      DBURI: ${DBURI}
      NODE_ENV: ${NODE_ENV}
    working_dir: /usr/src/app
    volumes:
      - ./fishnv-api:/usr/src/app

  # fishnv database
  db:
    container_name: fishnv-db
    image: supabase/postgres
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    ports:
      - 55432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./fishnv-database/migrations:/docker-entrypoint-initdb.d
      - ./volumes/db/data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U=postgres  && psql ${DBURI} --list
      interval: 10s
      timeout: 5s
      retries: 20
